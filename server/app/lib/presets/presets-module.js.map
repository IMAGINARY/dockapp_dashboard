{"version":3,"sources":["lib/presets/presets-module.js"],"names":["PresetsModule","httpApiServer","stationManager","logger","nconf","presetStore","info","open","get","router","listPresets","bind","post","addPreset","getPreset","put","updatePreset","delete","deletePreset","activatePreset","req","res","listAllPresets","then","allPresets","json","presets","catch","err","status","error","message","loadPreset","params","id","preset","send","name","stationData","newPreset","createPreset","fillPresetFromReq","save","remove","Promise","resolve","Object","entries","stationID","appID","changeApp","console","log","body","clearAllStationApps","keys","setStationApp"],"mappings":"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","file":"lib/presets/presets-module.js","sourcesContent":["import PresetStore from './preset-store';\nimport DuplicateIdentifierError from './duplicate-identifier-error';\n/**\n * Module that adds supports for Presets to the HTTP Api Server\n */\nexport default class PresetsModule {\n\n  constructor(httpApiServer) {\n    this.httpApiServer = httpApiServer;\n    this.stationManager = this.httpApiServer.stationManager;\n    this.logger = this.httpApiServer.logger;\n    this.nconf = this.httpApiServer.nconf;\n    this.presetStore = new PresetStore();\n  }\n\n  init() {\n    this.logger.info('Initializing Presets module');\n    return this.presetStore.open(this.nconf.get('db_path'));\n  }\n\n  setupRoutes(router) {\n    router.get('/presets', this.listPresets.bind(this));\n    router.post('/preset', this.addPreset.bind(this));\n    router.get('/preset/:id', this.getPreset.bind(this));\n    router.put('/preset/:id', this.updatePreset.bind(this));\n    router.delete('/preset/:id', this.deletePreset.bind(this));\n    router.post('/preset/:id/activate', this.activatePreset.bind(this));\n  }\n\n  listPresets(req, res) {\n    this.presetStore.listAllPresets().then(\n      (allPresets) => {\n        res.json({\n          presets: allPresets,\n        });\n      }\n    ).catch((err) => {\n      res.status(500).json({ error: err.message });\n    });\n  }\n\n  getPreset(req, res) {\n    this.presetStore.loadPreset(req.params.id).then(\n      (preset) => {\n        if (preset === null) {\n          res.status(404).send('Preset not found');\n        } else {\n          res.json({\n            id: preset.id,\n            name: preset.name,\n            stationData: preset.stationData,\n          });\n        }\n      }\n    ).catch((err) => {\n      res.status(500).json({ error: err.message });\n    });\n  }\n\n  addPreset(req, res) {\n    const newPreset = this.presetStore.createPreset();\n    PresetsModule.fillPresetFromReq(newPreset, req);\n    newPreset.save()\n    .then((preset) => {\n      res.json({\n        id: preset.id,\n        name: preset.name,\n        stationData: preset.stationData,\n      });\n    })\n    .catch((err) => {\n      if (err instanceof DuplicateIdentifierError) {\n        res.status(400).json({ error: err.message });\n      } else {\n        res.status(500).json({ error: err.message });\n      }\n    });\n  }\n\n  updatePreset(req, res) {\n    this.presetStore.loadPreset(req.params.id).then(\n      (preset) => {\n        if (preset === null) {\n          res.status(404).send('Preset not found');\n        } else {\n          PresetsModule.fillPresetFromReq(preset, req);\n          preset.save()\n          .then(() => {\n            res.json({\n              id: preset.id,\n              name: preset.name,\n              stationData: preset.stationData,\n            });\n          })\n          .catch((err) => {\n            if (err instanceof DuplicateIdentifierError) {\n              res.status(400).json({ error: err.message });\n            } else {\n              res.status(500).json({ error: err.message });\n            }\n          });\n        }\n      }\n    ).catch((err) => {\n      res.status(500).json({ error: err.message });\n    });\n  }\n\n  deletePreset(req, res) {\n    this.presetStore.loadPreset(req.params.id).then(\n      (preset) => {\n        if (preset === null) {\n          res.status(404).send('Preset not found');\n        } else {\n          return preset.remove()\n          .then(() => {\n            res.status(200).send('');\n          });\n        }\n        return Promise.resolve();\n      }\n    ).catch((err) => {\n      res.status(500).json({ error: err.message });\n    });\n  }\n\n  activatePreset(req, res) {\n    this.presetStore.loadPreset(req.params.id).then(\n      (preset) => {\n        if (preset === null) {\n          res.status(404).send('Preset not found');\n        } else {\n          for (const [stationID, appID] of Object.entries(preset.stationData)) {\n            this.stationManager.changeApp([stationID], appID);\n          }\n          res.status(200).send('');\n        }\n      }\n    ).catch((err) => {\n      console.log(err);\n      res.status(500).json({ error: err.message });\n    });\n  }\n\n// eslint-disable-next-line class-methods-use-this\n  static fillPresetFromReq(preset, req) {\n    if (req.body.name) {\n      preset.name = req.body.name;\n    }\n    if (req.body.stationData) {\n      preset.clearAllStationApps();\n      for (const stationID of Object.keys(req.body.stationData)) {\n        preset.setStationApp(stationID, req.body.stationData[stationID]);\n      }\n    }\n    return preset;\n  }\n}\n"],"sourceRoot":"/source/"}