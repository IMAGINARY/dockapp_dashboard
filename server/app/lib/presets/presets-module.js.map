{"version":3,"sources":["lib/presets/presets-module.js"],"names":["validate","require","Joi","PresetsModule","httpApiServer","stationManager","logger","nconf","presetStore","info","open","get","router","listPresets","bind","post","addPresetSchema","addPreset","getPresetSchema","getPreset","put","updatePresetSchema","updatePreset","delete","deletePresetSchema","deletePreset","activatePresetSchema","activatePreset","req","res","listAllPresets","then","allPresets","json","presets","catch","err","status","error","message","loadPreset","params","id","preset","send","toJSON","newPreset","createPreset","body","save","name","stationApps","Object","assign","remove","Promise","resolve","entries","stationID","appID","changeApp","number","min","max","MAX_ID","required","presetIdParamSchema","string","MAX_NAME_LEN","object","pattern"],"mappings":"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","file":"lib/presets/presets-module.js","sourcesContent":["import Preset from './preset';\nimport PresetStore from './preset-store';\nimport DuplicateIdentifierError from './duplicate-identifier-error';\n\nconst validate = require('express-validation');\nconst Joi = require('joi');\n/**\n * Module that adds supports for Presets to the HTTP Api Server\n */\nexport default class PresetsModule {\n\n  constructor(httpApiServer) {\n    this.httpApiServer = httpApiServer;\n    this.stationManager = this.httpApiServer.stationManager;\n    this.logger = this.httpApiServer.logger;\n    this.nconf = this.httpApiServer.nconf;\n    this.presetStore = new PresetStore();\n  }\n\n  init() {\n    this.logger.info('Initializing Presets module');\n    return this.presetStore.open(this.nconf.get('db_path'));\n  }\n\n  setupRoutes(router) {\n    router.get('/presets', this.listPresets.bind(this));\n    router.post('/preset', validate(PresetsModule.addPresetSchema()), this.addPreset.bind(this));\n    router.get('/preset/:id', validate(PresetsModule.getPresetSchema()), this.getPreset.bind(this));\n    router.put('/preset/:id', validate(PresetsModule.updatePresetSchema()), this.updatePreset.bind(this));\n    router.delete('/preset/:id', validate(PresetsModule.deletePresetSchema()), this.deletePreset.bind(this));\n    router.post('/preset/:id/activate', validate(PresetsModule.activatePresetSchema()), this.activatePreset.bind(this));\n  }\n\n  listPresets(req, res) {\n    this.presetStore.listAllPresets().then(\n      (allPresets) => {\n        res.json({\n          presets: allPresets,\n        });\n      }\n    ).catch((err) => {\n      res.status(500).json({ error: err.message });\n    });\n  }\n\n  getPreset(req, res) {\n    this.presetStore.loadPreset(req.params.id).then(\n      (preset) => {\n        if (preset === null) {\n          res.status(404).send('Preset not found');\n        } else {\n          res.json(preset.toJSON());\n        }\n      }\n    ).catch((err) => {\n      res.status(500).json({ error: err.message });\n    });\n  }\n\n  addPreset(req, res) {\n    const newPreset = this.presetStore.createPreset(req.body);\n    newPreset.save()\n    .then((preset) => {\n      res.json(preset.toJSON());\n    })\n    .catch((err) => {\n      if (err instanceof DuplicateIdentifierError) {\n        res.status(400).json({ error: err.message });\n      } else {\n        res.status(500).json({ error: err.message });\n      }\n    });\n  }\n\n  updatePreset(req, res) {\n    this.presetStore.loadPreset(req.params.id).then(\n      (preset) => {\n        if (preset === null) {\n          res.status(404).send('Preset not found');\n        } else {\n          if (req.body.name) {\n            preset.name = req.body.name;\n          }\n          if (req.body.stationApps) {\n            preset.stationApps = Object.assign({}, req.body.stationApps);\n          }\n          preset.save()\n          .then(() => {\n            res.json(preset.toJSON());\n          })\n          .catch((err) => {\n            if (err instanceof DuplicateIdentifierError) {\n              res.status(400).json({ error: err.message });\n            } else {\n              res.status(500).json({ error: err.message });\n            }\n          });\n        }\n      }\n    ).catch((err) => {\n      res.status(500).json({ error: err.message });\n    });\n  }\n\n  deletePreset(req, res) {\n    this.presetStore.loadPreset(req.params.id).then(\n      (preset) => {\n        if (preset === null) {\n          res.status(404).send('Preset not found');\n        } else {\n          return preset.remove()\n          .then(() => {\n            res.status(200).send('');\n          });\n        }\n        return Promise.resolve();\n      }\n    ).catch((err) => {\n      res.status(500).json({ error: err.message });\n    });\n  }\n\n  activatePreset(req, res) {\n    this.presetStore.loadPreset(req.params.id).then(\n      (preset) => {\n        if (preset === null) {\n          res.status(404).send('Preset not found');\n        } else {\n          for (const [stationID, appID] of Object.entries(preset.stationApps)) {\n            this.stationManager.changeApp([stationID], appID);\n          }\n          res.status(200).send('');\n        }\n      }\n    ).catch((err) => {\n      res.status(500).json({ error: err.message });\n    });\n  }\n\n  static presetIdParamSchema() {\n    return {\n      params: {\n        id: Joi.number().min(1).max(Preset.MAX_ID).required(),\n      },\n    };\n  }\n\n  static getPresetSchema() {\n    return PresetsModule.presetIdParamSchema();\n  }\n\n  static addPresetSchema() {\n    return {\n      body: {\n        name: Joi.string().min(1).max(Preset.MAX_NAME_LEN).required(),\n        stationApps: Joi.object().pattern(/./, Joi.string().min(1)).required(),\n      },\n    };\n  }\n\n  static updatePresetSchema() {\n    return Object.assign(PresetsModule.presetIdParamSchema(), {\n      body: {\n        name: Joi.string().min(1).max(Preset.MAX_NAME_LEN),\n        stationApps: Joi.object().pattern(/./, Joi.string().min(1)),\n      },\n    });\n  }\n\n  static deletePresetSchema() {\n    return PresetsModule.presetIdParamSchema();\n  }\n\n  static activatePresetSchema() {\n    return PresetsModule.presetIdParamSchema();\n  }\n}\n"],"sourceRoot":"/source/"}