{"version":3,"sources":["lib/presets/preset.js"],"names":["Preset","data","store","id","name","stationApps","Object","assign","stationID","appID","insertPreset","then","updatePreset","removePreset","MAX_ID","MAX_NAME_LEN"],"mappings":";;;;;;;;;;AAAA;;;IAGqBA,M;;AAEnB;;;;;;AAMA,oBAAuB;AAAA,QAAXC,IAAW,yDAAJ,EAAI;;AAAA;;AACrB,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,EAAL,GAAUF,KAAKE,EAAL,IAAW,IAArB;AACA,SAAKC,IAAL,GAAYH,KAAKG,IAAL,IAAa,IAAzB;AACA,SAAKC,WAAL,GAAmBJ,KAAKI,WAAL,GAAmBC,OAAOC,MAAP,CAAc,EAAd,EAAkBN,KAAKI,WAAvB,CAAnB,GAAyD,EAA5E;AACD;;AAED;;;;;;;;;;6BAMS;AACP,aAAO;AACLF,YAAI,KAAKA,EADJ;AAELC,cAAM,KAAKA,IAFN;AAGLC,qBAAaC,OAAOC,MAAP,CAAc,EAAd,EAAkB,KAAKF,WAAvB;AAHR,OAAP;AAKD;;AAED;;;;;;;;;kCAMcG,S,EAAWC,K,EAAO;AAC9B,WAAKJ,WAAL,CAAiBG,SAAjB,IAA8BC,KAA9B;AACD;;AAED;;;;;;;;;kCAMcA,K,EAAO;AACnB,aAAO,KAAKJ,WAAL,CAAiBI,KAAjB,CAAP;AACD;;AAED;;;;;;;;;6BAMSP,K,EAAO;AACd,WAAKA,KAAL,GAAaA,KAAb;AACD;;AAED;;;;;;;;;;2BAOO;AAAA;;AACL,UAAI,KAAKC,EAAL,KAAY,IAAhB,EAAsB;AACpB,eAAO,KAAKD,KAAL,CAAWQ,YAAX,CAAwB,IAAxB,EAA8BC,IAA9B,CAAmC,UAACR,EAAD,EAAQ;AAChD,gBAAKA,EAAL,GAAUA,EAAV;AACA;AACD,SAHM,CAAP;AAID;AACD,aAAO,KAAKD,KAAL,CAAWU,YAAX,CAAwB,IAAxB,CAAP;AACD;;AAED;;;;;;;;;;6BAOS;AAAA;;AACP,aAAO,KAAKV,KAAL,CAAWW,YAAX,CAAwB,IAAxB,EAA8BF,IAA9B,CAAmC,YAAM;AAC9C,eAAKR,EAAL,GAAU,IAAV;AACD,OAFM,CAAP;AAGD;;;;;;kBAvFkBH,M;;;AA0FrBA,OAAOc,MAAP,GAAgB,UAAhB;AACAd,OAAOe,YAAP,GAAsB,EAAtB","file":"lib/presets/preset.js","sourcesContent":["/**\n * Represents a single Preset with its associated data\n */\nexport default class Preset {\n\n  /**\n   * Constructor\n   *\n   * @param {Object} data\n   *  Data properties to initialize the object\n   */\n  constructor(data = {}) {\n    this.store = null;\n    this.id = data.id || null;\n    this.name = data.name || null;\n    this.stationApps = data.stationApps ? Object.assign({}, data.stationApps) : {};\n  }\n\n  /**\n   * Returns an object that can be serialized to JSON\n   *\n   * Used by JSON.stringify\n   * @return {{id: (null|*), name: null, stationApps: *}}\n   */\n  toJSON() {\n    return {\n      id: this.id,\n      name: this.name,\n      stationApps: Object.assign({}, this.stationApps),\n    };\n  }\n\n  /**\n   * Set the app for a station\n   *\n   * @param {String} stationID\n   * @param {String} appID\n   */\n  setStationApp(stationID, appID) {\n    this.stationApps[stationID] = appID;\n  }\n\n  /**\n   * Get the app for a station\n   *\n   * @param {String} appID\n   * @return {Object}\n   */\n  getStationApp(appID) {\n    return this.stationApps[appID];\n  }\n\n  /**\n   * Assigns a preset store\n   *\n   * The store is used for preset storage via the save() and remove() methods\n   * @param store\n   */\n  setStore(store) {\n    this.store = store;\n  }\n\n  /**\n   * Saves the preset in the store\n   *\n   * If the preset's id was null one will be set after calling this function.\n   *\n   * @return {Promise.<Preset>}\n   */\n  save() {\n    if (this.id === null) {\n      return this.store.insertPreset(this).then((id) => {\n        this.id = id;\n        return this;\n      });\n    }\n    return this.store.updatePreset(this);\n  }\n\n  /**\n   * Deletes the preset from the store\n   *\n   * The id field is nulled after deleting.\n   *\n   * @return {Promise.<Preset>}\n   */\n  remove() {\n    return this.store.removePreset(this).then(() => {\n      this.id = null;\n    });\n  }\n}\n\nPreset.MAX_ID = 4294967295;\nPreset.MAX_NAME_LEN = 50;\n"],"sourceRoot":"/source/"}