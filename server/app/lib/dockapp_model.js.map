{"version":3,"sources":["lib/dockapp_model.js"],"names":[],"mappings":";;;;;;AAAA,IAAM,OAAO,QAAQ,eAAR,EAAyB,IAAtC;;IAEM,O;AAEJ,mBAAY,MAAZ,EAAoB;AAAA;;AAClB,SAAK,MAAL,GAAc,MAAd;AACD;;;;gCAEW,I,EAAM,K,EAAO;AACvB,UAAM,wCAAsC,KAAK,MAAL,CAAY,GAAZ,CAAgB,cAAhB,CAA5C;AACA,WAAK,OAAL,EAAc,EAAd,EAAkB,UAAC,GAAD,EAAM,MAAN,EAAiB;AACjC,YAAI,GAAJ,EAAS;AACP,gBAAM,GAAN;AACD,SAFD,MAEO;AACL,cAAM,WAAW,KAAK,KAAL,CAAW,MAAX,CAAjB;AACA,eAAK,IAAI,IAAI,CAAb,EAAgB,MAAM,SAAS,QAAT,CAAkB,MAAxC,EAAgD,GAAhD,EAAqD;AACnD,qBAAS,QAAT,CAAkB,CAAlB,EAAqB,KAArB,GAA6B,IAA7B;AACA,qBAAS,QAAT,CAAkB,CAAlB,EAAqB,MAArB,GAA8B,EAA9B;AACD;AACD,eAAK,SAAS,QAAd;AACD;AACF,OAXD;AAYD;;;;;;AAGH,OAAO,OAAP,GAAiB,OAAjB","file":"lib/dockapp_model.js","sourcesContent":["const exec = require('child_process').exec;\n\nclass Dockapp {\n\n  constructor(config) {\n    this.config = config;\n  }\n\n  getStations(done, error) {\n    const command = `scripts/list_stations.sh ${this.config.get('dockapp_path')}`;\n    exec(command, {}, (err, stdout) => {\n      if (err) {\n        error(err);\n      } else {\n        const response = JSON.parse(stdout);\n        for (let i = 0; i !== response.stations.length; i++) {\n          response.stations[i].state = 'on';\n          response.stations[i].status = '';\n        }\n        done(response.stations);\n      }\n    });\n  }\n}\n\nmodule.exports = Dockapp;\n"],"sourceRoot":"/source/"}