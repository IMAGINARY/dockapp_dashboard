// Compiled by Babel
// ** DO NOT EDIT THIS FILE DIRECTLY **
//
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Station = function Station(config) {
  _classCallCheck(this, Station);

  var configKeys = ['id', 'name', 'type', 'default_app', 'possible_apps'];

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = configKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var configKey = _step.value;

      if (!config.hasOwnProperty(configKey)) {
        if (configKey === 'id') {
          throw new Error('Attempted to initialize station with config missing id');
        }
        throw new Error('Attempted to initialize station ' + config.id + ' missing config key ' + configKey);
      }

      this[configKey] = config[configKey];
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  this.state = 'off';
  this.status = '';
  this.app = this.default_app;
  this.icon = '';
};

// Station states

exports.default = Station;
Station.OFF = 'off';
Station.ON = 'on';
Station.BUSY = 'busy';
Station.ERROR = 'error';
//# sourceMappingURL=station.js.map
