{"version":3,"sources":["lib/station.js"],"names":["Station","config","configKeys","configKey","hasOwnProperty","Error","id","state","UNKNOWN","status","app","default_app","switching_app","outputBuffer","stationStatus","changes","app_id","ERROR","HostState","UNREACHABLE","setErrorState","DOWN","setOffState","UP","setOnState","ON","currentTime","OFF","STOPPING","STARTING_STATION","setStartingAppState","STARTING_APP","app_state","ServiceState","OK","SWITCHING_APP","appID","reason","now","Date","getDate","getMonth","getHours","getMinutes"],"mappings":"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","file":"lib/station.js","sourcesContent":["import TerminalOutputBuffer from './terminal-output-buffer';\nimport Nagios from './nagios';\n\nexport default class Station {\n\n  constructor(config) {\n    const configKeys = ['id', 'name', 'type', 'default_app', 'possible_apps'];\n\n    for (const configKey of configKeys) {\n      if (!config.hasOwnProperty(configKey)) {\n        if (configKey === 'id') {\n          throw new Error('Attempted to initialize station with config missing id');\n        }\n        throw new Error(\n          `Attempted to initialize station ${config.id} missing config key ${configKey}`\n        );\n      }\n\n      this[configKey] = config[configKey];\n    }\n\n    this.state = Station.UNKNOWN;\n    this.status = '';\n    this.app = this.default_app;\n    this.switching_app = '';\n    this.outputBuffer = new TerminalOutputBuffer();\n  }\n\n  /**\n   * Updates the state of the station\n   *\n   * Returns true if the state was changed\n   *\n   * @param {Object} stationStatus - MKLivestatus status of the station\n   * @returns {boolean}\n   */\n  updateFromMKLivestatus(stationStatus) {\n    // stationStatus:\n      // id: station.id,\n      // state: Nagios.HostState.DOWN,\n      // state_type: Nagios.StateType.HARD,\n      // app_state: Nagios.ServiceState.UNKNOWN,\n      // app_state_type: Nagios.StateType.HARD,\n      // app_id: '',\n\n    let changes = false;\n    if (this.app !== stationStatus.app_id) {\n      this.app = stationStatus.app_id;\n      changes = true;\n    }\n\n    // todo: STARTING_STATION, STARTING_APP and STOPPING timeout\n    // todo: SWITCHING_APP timeout\n\n    if (this.state === Station.ERROR) {\n      return false;\n    }\n\n    if (stationStatus.state === Nagios.HostState.UNREACHABLE) {\n      this.setErrorState('Station unreachable');\n      return true;\n    }\n\n    if (this.state === Station.UNKNOWN) {\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setOffState();\n        return true;\n      } else if (stationStatus.state === Nagios.HostState.UP) {\n        this.setOnState();\n        return true;\n      }\n    } else if (this.state === Station.ON) {\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setOffState(`Unexpectedly shut down (${this.currentTime()})`);\n        return true;\n      }\n    } else if (this.state === Station.OFF) {\n      if (stationStatus.state === Nagios.HostState.UP) {\n        this.setOnState();\n        return true;\n      }\n    } else if (this.state === Station.STOPPING) {\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setOffState(`Manually turned off (${this.currentTime()})`);\n        return true;\n      }\n    } else if (this.state === Station.STARTING_STATION) {\n      if (stationStatus.state === Nagios.HostState.UP) {\n        this.setStartingAppState();\n        return true;\n      }\n    } else if (this.state === Station.STARTING_APP) {\n      if (stationStatus.app_state === Nagios.ServiceState.OK) {\n        this.setOnState();\n        return true;\n      }\n    } else if (this.state === Station.SWITCHING_APP) {\n      if (this.switching_app !== '' && this.switching_app === stationStatus.app_id) {\n        this.setOnState();\n        return true;\n      }\n\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setOffState(`Unexpectedly shut down (${this.currentTime()})`);\n        return true;\n      }\n    }\n\n    return changes;\n  }\n\n  /**\n   * Transitions the station to the \"waiting to start\" state\n   *\n   * @return {boolean} The transition was successful\n   */\n  setQueuedToStartState() {\n    if (this.state === Station.OFF) {\n      this.state = Station.STARTING_STATION;\n      this.status = 'Waiting to start...';\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"starting\" state\n   *\n   * @return {boolean} The transition was successful\n   */\n  setStartingState() {\n    if (this.state === Station.OFF || this.state === Station.STARTING_STATION) {\n      this.state = Station.STARTING_STATION;\n      this.status = 'Starting...';\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"starting app\" state\n   *\n   * @return {boolean} The transition was sucessful\n   */\n  setStartingAppState() {\n    if (this.state === Station.STARTING_STATION) {\n      this.state = Station.STARTING_APP;\n      this.status = 'Waiting for app...';\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"waiting to stop\" state\n   *\n   * @return {boolean} The transition was succesful\n   */\n  setQueuedToStopState() {\n    if (this.state === Station.ON) {\n      this.state = Station.STOPPING;\n      this.status = 'Waiting to stop...';\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"stopping\" state\n   *\n   * @return {boolean} The transition was successful\n   */\n  setStoppingState() {\n    if (this.state === Station.OFF || this.state === Station.STOPPING) {\n      this.state = Station.STOPPING;\n      this.status = 'Stopping...';\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"queued to change app\" state\n   *\n   * @param appID {string}\n   * @return {boolean} The transition was successful\n   */\n  setQueuedToChangeAppState(appID) {\n    if (this.state === Station.ON && appID !== this.app) {\n      this.state = Station.SWITCHING_APP;\n      this.status = 'Waiting to change app...';\n      this.switching_app = appID;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"changing app\" state\n   *\n   * @param appID {string}\n   * @return {boolean} The transition was successful\n   */\n  setChangingAppState(appID) {\n    if ((this.state === Station.ON || this.state === Station.SWITCHING_APP) && appID !== this.app) {\n      this.state = Station.SWITCHING_APP;\n      this.status = `Opening ${appID}...`;\n      this.switching_app = appID;\n      return true;\n    }\n    return false;\n  }\n\n  setOnState() {\n    this.state = Station.ON;\n    this.status = '';\n    this.switching_app = '';\n  }\n\n  setOffState(reason) {\n    this.state = Station.OFF;\n    this.status = reason;\n    this.switching_app = '';\n  }\n\n  /**\n   * Transitions the station to the \"error\" state\n   *\n   * @param reason {string} Description of the error\n   */\n  setErrorState(reason) {\n    this.state = Station.ERROR;\n    this.status = reason;\n  }\n\n  /**\n   * Prints the current time\n   * @private\n   */\n  currentTime() {\n    const now = new Date();\n    return `${now.getDate()}/${now.getMonth()} ${now.getHours()}:${now.getMinutes()}`;\n  }\n}\n\n// Station states\n\nStation.UNKNOWN = 'unk';\nStation.OFF = 'off';\nStation.ON = 'on';\nStation.STOPPING = 'stopping';\nStation.STARTING_STATION = 'starting_station';\nStation.STARTING_APP = 'starting_app';\nStation.SWITCHING_APP = 'switching_app';\nStation.ERROR = 'error';\n"],"sourceRoot":"/source/"}