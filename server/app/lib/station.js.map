{"version":3,"sources":["lib/station.js"],"names":["EventEmitter","require","Station","id","config","name","description","profile","type","default_app","client_settings","hilbert_station_default_application","compatible_apps","compatible_applications","state","UNKNOWN","setStatus","app","switching_app","outputBuffer","events","status","stationStatus","changes","app_id","ERROR","HostState","UNREACHABLE","setErrorState","emit","DOWN","setOffState","UP","setOnState","ON","OFF","STOPPING","STARTING_STATION","setStartingAppState","STARTING_APP","app_state","ServiceState","OK","SWITCHING_APP","appID","reason","text","withTimestamp","timestamp","now","Date","getDate","getMonth","getHours","getMinutes","join"],"mappings":"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","file":"lib/station.js","sourcesContent":["import TerminalOutputBuffer from './terminal-output-buffer';\nimport Nagios from './nagios';\n\nconst EventEmitter = require('events').EventEmitter;\n\nexport default class Station {\n\n  constructor(id, config) {\n    this.id = id;\n    this.name = config.name || id;\n    this.description = config.description || '';\n    this.profile = config.profile || '';\n    this.type = config.type || '';\n    this.default_app = (config.client_settings && config.client_settings.hilbert_station_default_application) || '';\n    this.compatible_apps = config.compatible_applications;\n\n    this.state = Station.UNKNOWN;\n    this.setStatus('');\n    this.app = '';\n    this.switching_app = '';\n    this.outputBuffer = new TerminalOutputBuffer();\n    this.events = new EventEmitter();\n  }\n\n  toJSON() {\n    return {\n      id: this.id,\n      name: this.name,\n      description: this.description,\n      profile: this.profile,\n      type: this.type,\n      state: this.state,\n      app: this.app,\n      status: this.status,\n      default_app: this.default_app,\n      compatible_apps: this.compatible_apps,\n      switching_app: this.switching_app,\n    };\n  }\n\n  /**\n   * Updates the state of the station\n   *\n   * Returns true if the state was changed\n   *\n   * @param {Object} stationStatus - MKLivestatus status of the station\n   * @param {String} stationStatus.id - station.id\n   * @param {Number} stationStatus.state - Enum from Nagios.HostState\n   * @param {Number} stationStatus.state_type - Enum from Nagios.StateType\n   * @param {Number} stationStatus.app_state - Enum from Nagios.ServiceState\n   * @param {Number} stationStatus.app_state_type - Enum from Nagios.StateType\n   * @param {String} stationStatus.app_id - ID of the app\n   * @returns {boolean}\n   */\n  updateFromMKLivestatus(stationStatus) {\n    let changes = false;\n    if (this.app !== stationStatus.app_id) {\n      this.app = stationStatus.app_id;\n      changes = true;\n    }\n\n    // todo: STARTING_STATION, STARTING_APP and STOPPING timeout\n    // todo: SWITCHING_APP timeout\n    // todo: Come out of ERROR state (with notification)\n    // todo: Come out of UNREACHABLE state\n\n    if (this.state !== Station.ERROR && stationStatus.state === Nagios.HostState.UNREACHABLE) {\n      this.setErrorState('Station unreachable');\n      this.events.emit('stateChange', this, 'error', 'Station unreachable');\n      return true;\n    }\n\n    if (this.state === Station.ERROR) {\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setOffState();\n        return true;\n      } else if (stationStatus.state === Nagios.HostState.UP) {\n        this.setOnState();\n        return true;\n      }\n    } else if (this.state === Station.UNKNOWN) {\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setOffState();\n        return true;\n      } else if (stationStatus.state === Nagios.HostState.UP) {\n        this.setOnState();\n        return true;\n      }\n    } else if (this.state === Station.ON) {\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setOffState('Unexpectedly shut down');\n        this.events.emit('stateChange', this, 'warning', 'Station stopped unexpectedly');\n        return true;\n      }\n    } else if (this.state === Station.OFF) {\n      if (stationStatus.state === Nagios.HostState.UP) {\n        this.setOnState();\n        return true;\n      }\n    } else if (this.state === Station.STOPPING) {\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.events.emit('stateChange', this, 'info', 'Station stopped');\n        this.setOffState('Manually turned off');\n        return true;\n      }\n    } else if (this.state === Station.STARTING_STATION) {\n      if (stationStatus.state === Nagios.HostState.UP) {\n        this.setStartingAppState();\n        return true;\n      }\n    } else if (this.state === Station.STARTING_APP) {\n      if (stationStatus.app_state === Nagios.ServiceState.OK) {\n        this.events.emit('stateChange', this, 'info', 'Station started');\n        this.setOnState();\n        return true;\n      }\n    } else if (this.state === Station.SWITCHING_APP) {\n      if (this.switching_app !== '' && this.switching_app === stationStatus.app_id) {\n        this.events.emit('stateChange', this, 'info', 'App changed');\n        this.setOnState();\n        return true;\n      }\n\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setOffState('Unexpectedly shut down');\n        this.events.emit('stateChange', this, 'warning', 'Station stopped unexpectedly');\n        return true;\n      }\n    }\n\n    return changes;\n  }\n\n  /**\n   * Transitions the station to the \"waiting to start\" state\n   *\n   * @return {boolean} The transition was successful\n   */\n  setQueuedToStartState() {\n    if (this.state === Station.OFF) {\n      this.state = Station.STARTING_STATION;\n      this.setStatus('Waiting to start...');\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"starting\" state\n   *\n   * @return {boolean} The transition was successful\n   */\n  setStartingState() {\n    if (this.state === Station.OFF || this.state === Station.STARTING_STATION) {\n      this.state = Station.STARTING_STATION;\n      this.setStatus('Starting...');\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"starting app\" state\n   *\n   * @return {boolean} The transition was sucessful\n   */\n  setStartingAppState() {\n    if (this.state === Station.STARTING_STATION) {\n      this.state = Station.STARTING_APP;\n      this.setStatus('Waiting for app...');\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"waiting to stop\" state\n   *\n   * @return {boolean} The transition was succesful\n   */\n  setQueuedToStopState() {\n    if (this.state === Station.ON) {\n      this.state = Station.STOPPING;\n      this.setStatus('Waiting to stop...');\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"stopping\" state\n   *\n   * @return {boolean} The transition was successful\n   */\n  setStoppingState() {\n    if (this.state === Station.OFF || this.state === Station.STOPPING) {\n      this.state = Station.STOPPING;\n      this.setStatus('Stopping...');\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"queued to change app\" state\n   *\n   * @param appID {string}\n   * @return {boolean} The transition was successful\n   */\n  setQueuedToChangeAppState(appID) {\n    if (this.state === Station.ON && appID !== this.app) {\n      this.state = Station.SWITCHING_APP;\n      this.setStatus('Waiting to change app...');\n      this.switching_app = appID;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"changing app\" state\n   *\n   * @param appID {string}\n   * @return {boolean} The transition was successful\n   */\n  setChangingAppState(appID) {\n    if ((this.state === Station.ON || this.state === Station.SWITCHING_APP) && appID !== this.app) {\n      this.state = Station.SWITCHING_APP;\n      this.setStatus(`Opening ${appID}...`);\n      this.switching_app = appID;\n      return true;\n    }\n    return false;\n  }\n\n  setOnState() {\n    this.state = Station.ON;\n    this.setStatus('');\n    this.switching_app = '';\n  }\n\n  setOffState(reason = '') {\n    this.state = Station.OFF;\n    this.setStatus(reason, (reason !== ''));\n    this.switching_app = '';\n  }\n\n  /**\n   * Transitions the station to the \"error\" state\n   *\n   * @param reason {string} Description of the error\n   */\n  setErrorState(reason) {\n    this.state = Station.ERROR;\n    this.setStatus(reason);\n  }\n\n  /**\n   * Sets the station status text\n   *\n   * @private\n   * @param text {String} Status text\n   * @param withTimestamp {Boolean} Add a timestamp to the status\n   */\n  setStatus(text, withTimestamp = false) {\n    let timestamp = '';\n    if (withTimestamp) {\n      const now = new Date();\n      timestamp = `${now.getDate()}/${now.getMonth()} ${now.getHours()}:${now.getMinutes()}`;\n    }\n\n    this.status = [text, timestamp].join(' ');\n  }\n}\n\n// Station states\n\nStation.UNKNOWN = 'unk';\nStation.OFF = 'off';\nStation.ON = 'on';\nStation.STOPPING = 'stopping';\nStation.STARTING_STATION = 'starting_station';\nStation.STARTING_APP = 'starting_app';\nStation.SWITCHING_APP = 'switching_app';\nStation.ERROR = 'error';\n"],"sourceRoot":"/source/"}