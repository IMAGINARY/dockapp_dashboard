{"version":3,"sources":["lib/station.js"],"names":[],"mappings":"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","file":"lib/station.js","sourcesContent":["import TerminalOutputBuffer from './terminal-output-buffer';\nimport Nagios from './nagios';\n\nexport default class Station {\n\n  constructor(config) {\n    const configKeys = ['id', 'name', 'type', 'default_app', 'possible_apps'];\n\n    for (const configKey of configKeys) {\n      if (!config.hasOwnProperty(configKey)) {\n        if (configKey === 'id') {\n          throw new Error('Attempted to initialize station with config missing id');\n        }\n        throw new Error(\n          `Attempted to initialize station ${config.id} missing config key ${configKey}`\n        );\n      }\n\n      this[configKey] = config[configKey];\n    }\n\n    this.state = Station.UNKNOWN;\n    this.status = '';\n    this.app = this.default_app;\n    this.switching_app = '';\n    this.outputBuffer = new TerminalOutputBuffer();\n  }\n\n  /**\n   * Updates the state of the station\n   *\n   * Returns true if the state was changed\n   *\n   * @param {Object} stationStatus - MKLivestatus status of the station\n   * @returns {boolean}\n   */\n  updateFromMKLivestatus(stationStatus) {\n    // stationStatus:\n      // id: station.id,\n      // state: Nagios.HostState.DOWN,\n      // state_type: Nagios.StateType.HARD,\n      // app_state: Nagios.ServiceState.UNKNOWN,\n      // app_state_type: Nagios.StateType.HARD,\n      // app_id: '',\n\n    let changes = false;\n    if (this.app !== stationStatus.app_id) {\n      this.app = stationStatus.app_id;\n      changes = true;\n    }\n\n    // todo: STARTING_STATION, STARTING_APP and STOPPING timeout\n    // todo: SWITCHING_APP timeout\n\n    if (this.state === Station.ERROR) {\n      return false;\n    }\n\n    if (stationStatus.state === Nagios.HostState.UNREACHABLE) {\n      this.setErrorState('Station unreachable');\n      return true;\n    }\n\n    if (this.state === Station.UNKNOWN) {\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setOffState();\n        return true;\n      } else if (stationStatus.state === Nagios.HostState.UP) {\n        this.setOnState();\n        return true;\n      }\n    } else if (this.state === Station.ON) {\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setOffState();\n        return true;\n      }\n    } else if (this.state === Station.OFF) {\n      if (stationStatus.state === Nagios.HostState.UP) {\n        this.setOnState();\n        return true;\n      }\n    } else if (this.state === Station.STOPPING) {\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setOffState();\n        return true;\n      }\n    } else if (this.state === Station.STARTING_STATION) {\n      if (stationStatus.state === Nagios.HostState.UP) {\n        this.setStartingAppState();\n        return true;\n      }\n    } else if (this.state === Station.STARTING_APP) {\n      if (stationStatus.app_state === Nagios.ServiceState.OK ) {\n        this.setOnState();\n        return true;\n      }\n    } else if (this.state === Station.SWITCHING_APP) {\n      if (this.switching_app !== '' && this.switching_app === stationStatus.app_id) {\n        this.setOnState();\n        return true;\n      }\n\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setOffState();\n        return true;\n      }\n    }\n\n    return changes;\n  }\n\n  /**\n   * Transitions the station to the \"waiting to start\" state\n   *\n   * @return {boolean} The transition was successful\n   */\n  setQueuedToStartState() {\n    if (this.state === Station.OFF) {\n      this.state = Station.STARTING_STATION;\n      this.status = 'Waiting to start...';\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"starting\" state\n   *\n   * @return {boolean} The transition was successful\n   */\n  setStartingState() {\n    if (this.state === Station.OFF || this.state === Station.STARTING_STATION) {\n      this.state = Station.STARTING_STATION;\n      this.status = 'Starting...';\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"starting app\" state\n   *\n   * @return {boolean} The transition was sucessful\n   */\n  setStartingAppState() {\n    if (this.state === Station.STARTING_STATION) {\n      this.state = Station.STARTING_APP;\n      this.status = 'Waiting for app...';\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"waiting to stop\" state\n   *\n   * @return {boolean} The transition was succesful\n   */\n  setQueuedToStopState() {\n    if (this.state === Station.ON) {\n      this.state = Station.STOPPING;\n      this.status = 'Waiting to stop...';\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"stopping\" state\n   *\n   * @return {boolean} The transition was successful\n   */\n  setStoppingState() {\n    if (this.state === Station.OFF || this.state === Station.STOPPING) {\n      this.state = Station.STOPPING;\n      this.status = 'Stopping...';\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"queued to change app\" state\n   *\n   * @param appID {string}\n   * @return {boolean} The transition was successful\n   */\n  setQueuedToChangeAppState(appID) {\n    if (this.state === Station.ON && appID !== this.app) {\n      this.state = Station.SWITCHING_APP;\n      this.status = 'Waiting to change app...';\n      this.switching_app = appID;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"changing app\" state\n   *\n   * @param appID {string}\n   * @return {boolean} The transition was successful\n   */\n  setChangingAppState(appID) {\n    if ((this.state === Station.ON || this.state === Station.SWITCHING_APP) && appID !== this.app) {\n      this.state = Station.SWITCHING_APP;\n      this.status = `Opening ${appID}...`;\n      this.switching_app = appID;\n      return true;\n    }\n    return false;\n  }\n\n  setOnState() {\n    this.state = Station.ON;\n    this.status = '';\n    this.switching_app = '';\n  }\n\n  setOffState() {\n    this.state = Station.OFF;\n    this.status = '';\n    this.switching_app = '';\n  }\n\n  /**\n   * Transitions the station to the \"error\" state\n   *\n   * @param reason {string} Description of the error\n   */\n  setErrorState(reason) {\n    this.state = Station.ERROR;\n    this.status = reason;\n  }\n}\n\n// Station states\n\nStation.UNKNOWN = 'unk';\nStation.OFF = 'off';\nStation.ON = 'on';\nStation.STOPPING = 'stopping';\nStation.STARTING_STATION = 'starting_station';\nStation.STARTING_APP = 'starting_app';\nStation.SWITCHING_APP = 'switching_app';\nStation.ERROR = 'error';\n"],"sourceRoot":"/source/"}