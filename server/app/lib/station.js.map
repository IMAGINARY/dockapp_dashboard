{"version":3,"sources":["lib/station.js"],"names":["EventEmitter","require","Station","id","config","nconf","name","description","profile","type","default_app","client_settings","hilbert_station_default_application","compatible_apps","compatible_applications","state","UNKNOWN","setStatus","app","switching_app","outputBuffer","events","transitionTimeout","onTransitionTimeout","bind","errorLockTimeout","errorLockStartTime","status","locked","isErrorLocked","locked_seconds","errorLockRemainingSeconds","stationStatus","changes","app_id","ERROR","HostState","UNREACHABLE","setErrorState","emit","DOWN","setOffState","UP","setOnState","ON","OFF","STOPPING","STARTING_STATION","setStartingAppState","STARTING_APP","errorLock","app_state","ServiceState","OK","SWITCHING_APP","startTransitionTimeout","appID","clearTransitionTimeout","reason","text","withTimestamp","timestamp","now","Date","getDate","getMonth","getHours","getMinutes","join","setTimeout","get","clearTimeout","messages","clearErrorLock","elapsedSeconds","Math","floor","wait","max"],"mappings":"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","file":"lib/station.js","sourcesContent":["import TerminalOutputBuffer from './terminal-output-buffer';\nimport Nagios from './nagios';\n\nconst EventEmitter = require('events').EventEmitter;\n\nexport default class Station {\n\n  constructor(id, config, nconf) {\n    this.nconf = nconf;\n\n    this.id = id;\n    this.name = config.name || id;\n    this.description = config.description || '';\n    this.profile = config.profile || '';\n    this.type = config.type || '';\n    this.default_app = (config.client_settings && config.client_settings.hilbert_station_default_application) || '';\n    this.compatible_apps = config.compatible_applications;\n\n    this.state = Station.UNKNOWN;\n    this.setStatus('');\n    this.app = '';\n    this.switching_app = '';\n    this.outputBuffer = new TerminalOutputBuffer();\n    this.events = new EventEmitter();\n    this.transitionTimeout = null;\n    this.onTransitionTimeout = this.onTransitionTimeout.bind(this);\n\n    this.errorLockTimeout = null;\n    this.errorLockStartTime = null;\n  }\n\n  toJSON() {\n    return {\n      id: this.id,\n      name: this.name,\n      description: this.description,\n      profile: this.profile,\n      type: this.type,\n      state: this.state,\n      app: this.app,\n      status: this.status,\n      locked: this.isErrorLocked(),\n      locked_seconds: this.errorLockRemainingSeconds(),\n      default_app: this.default_app,\n      compatible_apps: this.compatible_apps,\n      switching_app: this.switching_app,\n    };\n  }\n\n  /**\n   * Updates the state of the station\n   *\n   * Returns true if the state was changed\n   *\n   * @param {Object} stationStatus - MKLivestatus status of the station\n   * @param {String} stationStatus.id - station.id\n   * @param {Number} stationStatus.state - Enum from Nagios.HostState\n   * @param {Number} stationStatus.state_type - Enum from Nagios.StateType\n   * @param {Number} stationStatus.app_state - Enum from Nagios.ServiceState\n   * @param {Number} stationStatus.app_state_type - Enum from Nagios.StateType\n   * @param {String} stationStatus.app_id - ID of the app\n   * @returns {boolean}\n   */\n  updateFromMKLivestatus(stationStatus) {\n    let changes = false;\n    if (this.app !== stationStatus.app_id) {\n      this.app = stationStatus.app_id;\n      changes = true;\n    }\n\n    if (this.state === Station.ERROR && this.isErrorLocked()) {\n      return false;\n    }\n\n    if (this.state !== Station.ERROR && stationStatus.state === Nagios.HostState.UNREACHABLE) {\n      this.setErrorState('Station unreachable');\n      this.events.emit('stateChange', this, 'error', 'Station unreachable');\n      return true;\n    }\n\n    if (this.state === Station.ERROR || this.state === Station.UNKNOWN) {\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setOffState();\n        return true;\n      } else if (stationStatus.state === Nagios.HostState.UP) {\n        this.setOnState();\n        return true;\n      }\n    } else if (this.state === Station.ON) {\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setOffState('Unexpected stop');\n        this.events.emit('stateChange', this, 'warning', 'Station stopped unexpectedly');\n        return true;\n      }\n    } else if (this.state === Station.OFF) {\n      if (stationStatus.state === Nagios.HostState.UP) {\n        this.setOnState();\n        return true;\n      }\n    } else if (this.state === Station.STOPPING) {\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.events.emit('stateChange', this, 'info', 'Station stopped');\n        this.setOffState('Manually turned off');\n        return true;\n      }\n    } else if (this.state === Station.STARTING_STATION) {\n      if (stationStatus.state === Nagios.HostState.UP) {\n        this.setStartingAppState();\n        return true;\n      }\n    } else if (this.state === Station.STARTING_APP) {\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setErrorState('Unexpected stop starting app. Please wait...');\n        this.events.emit('stateChange', this, 'warning', 'Station stopped while starting app');\n        this.errorLock();\n        return true;\n      }\n      if (stationStatus.app_state === Nagios.ServiceState.OK) {\n        this.events.emit('stateChange', this, 'info', 'Station started');\n        this.setOnState();\n        return true;\n      }\n    } else if (this.state === Station.SWITCHING_APP) {\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setErrorState('Unexpected stop changing app. Please wait...');\n        this.events.emit('stateChange', this, 'warning', 'Station stopped while changing app');\n        this.errorLock();\n        return true;\n      }\n      if (this.switching_app !== '' && this.switching_app === stationStatus.app_id) {\n        this.events.emit('stateChange', this, 'info', 'App changed');\n        this.setOnState();\n        return true;\n      }\n    }\n\n    return changes;\n  }\n\n  /**\n   * Transitions the station to the \"waiting to start\" state\n   *\n   * @return {boolean} The transition was successful\n   */\n  setQueuedToStartState() {\n    if (!this.isErrorLocked() && this.state === Station.OFF) {\n      this.state = Station.STARTING_STATION;\n      this.setStatus('Waiting to start...');\n      this.startTransitionTimeout();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"starting\" state\n   *\n   * @return {boolean} The transition was successful\n   */\n  setStartingState() {\n    if (this.state === Station.OFF || this.state === Station.STARTING_STATION) {\n      this.state = Station.STARTING_STATION;\n      this.setStatus('Starting...');\n      this.startTransitionTimeout();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"starting app\" state\n   *\n   * @return {boolean} The transition was sucessful\n   */\n  setStartingAppState() {\n    if (this.state === Station.STARTING_STATION) {\n      this.state = Station.STARTING_APP;\n      this.setStatus('Waiting for app...');\n      this.startTransitionTimeout();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"waiting to stop\" state\n   *\n   * @return {boolean} The transition was succesful\n   */\n  setQueuedToStopState() {\n    if (!this.isErrorLocked() && this.state === Station.ON) {\n      this.state = Station.STOPPING;\n      this.setStatus('Waiting to stop...');\n      this.startTransitionTimeout();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"stopping\" state\n   *\n   * @return {boolean} The transition was successful\n   */\n  setStoppingState() {\n    if (this.state === Station.OFF || this.state === Station.STOPPING) {\n      this.state = Station.STOPPING;\n      this.setStatus('Stopping...');\n      this.startTransitionTimeout();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"queued to change app\" state\n   *\n   * @param appID {string}\n   * @return {boolean} The transition was successful\n   */\n  setQueuedToChangeAppState(appID) {\n    if (!this.isErrorLocked() && this.state === Station.ON && appID !== this.app) {\n      this.state = Station.SWITCHING_APP;\n      this.setStatus('Waiting to change app...');\n      this.switching_app = appID;\n      this.startTransitionTimeout();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"changing app\" state\n   *\n   * @param appID {string}\n   * @return {boolean} The transition was successful\n   */\n  setChangingAppState(appID) {\n    if ((this.state === Station.ON || this.state === Station.SWITCHING_APP) && appID !== this.app) {\n      this.state = Station.SWITCHING_APP;\n      this.setStatus(`Opening ${appID}...`);\n      this.switching_app = appID;\n      this.startTransitionTimeout();\n      return true;\n    }\n    return false;\n  }\n\n  setOnState() {\n    this.state = Station.ON;\n    this.setStatus('');\n    this.switching_app = '';\n    this.clearTransitionTimeout();\n  }\n\n  setOffState(reason = '') {\n    this.state = Station.OFF;\n    this.setStatus(reason, (reason !== ''));\n    this.switching_app = '';\n    this.clearTransitionTimeout();\n  }\n\n  /**\n   * Transitions the station to the \"error\" state\n   *\n   * @param reason {string} Description of the error\n   */\n  setErrorState(reason) {\n    this.state = Station.ERROR;\n    this.setStatus(reason);\n    this.clearTransitionTimeout();\n  }\n\n  /**\n   * Sets the station status text\n   *\n   * @private\n   * @param text {String} Status text\n   * @param withTimestamp {Boolean} Add a timestamp to the status\n   */\n  setStatus(text, withTimestamp = false) {\n    let timestamp = '';\n    if (withTimestamp) {\n      const now = new Date();\n      timestamp = `${now.getDate()}/${now.getMonth()} ${now.getHours()}:${now.getMinutes()}`;\n    }\n\n    this.status = [text, timestamp].join(' ');\n  }\n\n  /**\n   * Start checking for a timeout while waiting for an operation to complete\n   */\n  startTransitionTimeout() {\n    if (this.transitionTimeout !== null) {\n      this.clearTransitionTimeout();\n    }\n\n    this.transitionTimeout = setTimeout(this.onTransitionTimeout, this.nconf.get('operation_timeout') * 1000);\n  }\n\n  /**\n   * Clear checking for a timeout waiting for an operation to complete\n   */\n  clearTransitionTimeout() {\n    clearTimeout(this.transitionTimeout);\n    this.transitionTimeout = null;\n  }\n\n  /**\n   * Event handler for timeouts waiting for an operation to complete\n   */\n  onTransitionTimeout() {\n    this.transitionTimeout = null;\n\n    const messages = {};\n    messages[Station.STARTING_STATION] = 'Time out waiting for station to start';\n    messages[Station.STARTING_APP] = 'Time out waiting for app to start';\n    messages[Station.SWITCHING_APP] = 'Time out waiting for app to change';\n    messages[Station.STOPPING] = 'Time out waiting for station to stop';\n    this.events.emit('stateChange', this, 'error', messages[this.state] || 'Operation timed out');\n\n    this.state = Station.UNKNOWN;\n  }\n\n  /**\n   * Locks the station for a number of seconds after an error\n   *\n   * While the station is locked no operations (stop, start, change app) can be started.\n   */\n  errorLock() {\n    this.clearErrorLock();\n\n    this.errorLockStartTime = Date.now();\n    this.errorLockTimeout = setTimeout(() => {\n      this.errorLockTimeout = null;\n      this.errorLockStartTime = null;\n    }, this.nconf.get('error_lock_time') * 1000);\n  }\n\n  /**\n   * Pre-empts an error lock\n   *\n   * The station is unlocked immediately and its error lock timer is cleared.\n   */\n  clearErrorLock() {\n    if (this.errorLockTimeout !== null) {\n      clearTimeout(this.errorLockTimeout);\n      this.errorLockTimeout = null;\n      this.errorLockStartTime = null;\n    }\n  }\n\n  /**\n   * True if the station is locked because of an error\n   */\n  isErrorLocked() {\n    return (this.errorLockTimeout !== null);\n  }\n\n  /**\n   * Returns the number of seconds remaining before the error lock will end\n   *\n   * @return {number}\n   */\n  errorLockRemainingSeconds() {\n    if (this.errorLockTimeout === null || this.errorLockStartTime === null) {\n      return 0;\n    }\n\n    const elapsedSeconds = Math.floor((Date.now() - this.errorLockStartTime) / 1000);\n    const wait = this.nconf.get('error_lock_time') || 0;\n\n    return Math.max(wait - elapsedSeconds, 0);\n  }\n}\n\n// Station states\n\nStation.UNKNOWN = 'unk';\nStation.OFF = 'off';\nStation.ON = 'on';\nStation.STOPPING = 'stopping';\nStation.STARTING_STATION = 'starting_station';\nStation.STARTING_APP = 'starting_app';\nStation.SWITCHING_APP = 'switching_app';\nStation.ERROR = 'error';\n"],"sourceRoot":"/source/"}