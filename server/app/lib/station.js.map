{"version":3,"sources":["lib/station.js"],"names":["Station","id","config","name","description","profile","type","default_app","client_settings","hilbert_station_default_application","compatible_apps","compatible_applications","state","UNKNOWN","setStatus","app","switching_app","outputBuffer","status","stationStatus","changes","app_id","ERROR","HostState","UNREACHABLE","setErrorState","DOWN","setOffState","UP","setOnState","ON","OFF","STOPPING","STARTING_STATION","setStartingAppState","STARTING_APP","app_state","ServiceState","OK","SWITCHING_APP","appID","reason","text","withTimestamp","timestamp","now","Date","getDate","getMonth","getHours","getMinutes","join"],"mappings":"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","file":"lib/station.js","sourcesContent":["import TerminalOutputBuffer from './terminal-output-buffer';\nimport Nagios from './nagios';\n\nexport default class Station {\n\n  constructor(id, config) {\n    this.id = id;\n    this.name = config.name || id;\n    this.description = config.description || '';\n    this.profile = config.profile || '';\n    this.type = config.type || '';\n    this.default_app = (config.client_settings && config.client_settings.hilbert_station_default_application) || '';\n    this.compatible_apps = config.compatible_applications;\n\n    this.state = Station.UNKNOWN;\n    this.setStatus('');\n    this.app = '';\n    this.switching_app = '';\n    this.outputBuffer = new TerminalOutputBuffer();\n  }\n\n  toJSON() {\n    return {\n      id: this.id,\n      name: this.name,\n      description: this.description,\n      profile: this.profile,\n      type: this.type,\n      state: this.state,\n      app: this.app,\n      status: this.status,\n      default_app: this.default_app,\n      compatible_apps: this.compatible_apps,\n      switching_app: this.switching_app,\n    };\n  }\n\n  /**\n   * Updates the state of the station\n   *\n   * Returns true if the state was changed\n   *\n   * @param {Object} stationStatus - MKLivestatus status of the station\n   * @param {String} stationStatus.id - station.id\n   * @param {Number} stationStatus.state - Enum from Nagios.HostState\n   * @param {Number} stationStatus.state_type - Enum from Nagios.StateType\n   * @param {Number} stationStatus.app_state - Enum from Nagios.ServiceState\n   * @param {Number} stationStatus.app_state_type - Enum from Nagios.StateType\n   * @param {String} stationStatus.app_id - ID of the app\n   * @returns {boolean}\n   */\n  updateFromMKLivestatus(stationStatus) {\n    let changes = false;\n    if (this.app !== stationStatus.app_id) {\n      this.app = stationStatus.app_id;\n      changes = true;\n    }\n\n    // todo: STARTING_STATION, STARTING_APP and STOPPING timeout\n    // todo: SWITCHING_APP timeout\n    // todo: Come out of ERROR state\n    // todo: Come out of UNREACHABLE state\n\n    if (this.state === Station.ERROR) {\n      return false;\n    }\n\n    if (stationStatus.state === Nagios.HostState.UNREACHABLE) {\n      this.setErrorState('Station unreachable');\n      return true;\n    }\n\n    if (this.state === Station.UNKNOWN) {\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setOffState();\n        return true;\n      } else if (stationStatus.state === Nagios.HostState.UP) {\n        this.setOnState();\n        return true;\n      }\n    } else if (this.state === Station.ON) {\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setOffState('Unexpectedly shut down');\n        return true;\n      }\n    } else if (this.state === Station.OFF) {\n      if (stationStatus.state === Nagios.HostState.UP) {\n        this.setOnState();\n        return true;\n      }\n    } else if (this.state === Station.STOPPING) {\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setOffState('Manually turned off');\n        return true;\n      }\n    } else if (this.state === Station.STARTING_STATION) {\n      if (stationStatus.state === Nagios.HostState.UP) {\n        this.setStartingAppState();\n        return true;\n      }\n    } else if (this.state === Station.STARTING_APP) {\n      if (stationStatus.app_state === Nagios.ServiceState.OK) {\n        this.setOnState();\n        return true;\n      }\n    } else if (this.state === Station.SWITCHING_APP) {\n      if (this.switching_app !== '' && this.switching_app === stationStatus.app_id) {\n        this.setOnState();\n        return true;\n      }\n\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setOffState('Unexpectedly shut down');\n        return true;\n      }\n    }\n\n    return changes;\n  }\n\n  /**\n   * Transitions the station to the \"waiting to start\" state\n   *\n   * @return {boolean} The transition was successful\n   */\n  setQueuedToStartState() {\n    if (this.state === Station.OFF) {\n      this.state = Station.STARTING_STATION;\n      this.setStatus('Waiting to start...');\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"starting\" state\n   *\n   * @return {boolean} The transition was successful\n   */\n  setStartingState() {\n    if (this.state === Station.OFF || this.state === Station.STARTING_STATION) {\n      this.state = Station.STARTING_STATION;\n      this.setStatus('Starting...');\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"starting app\" state\n   *\n   * @return {boolean} The transition was sucessful\n   */\n  setStartingAppState() {\n    if (this.state === Station.STARTING_STATION) {\n      this.state = Station.STARTING_APP;\n      this.setStatus('Waiting for app...');\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"waiting to stop\" state\n   *\n   * @return {boolean} The transition was succesful\n   */\n  setQueuedToStopState() {\n    if (this.state === Station.ON) {\n      this.state = Station.STOPPING;\n      this.setStatus('Waiting to stop...');\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"stopping\" state\n   *\n   * @return {boolean} The transition was successful\n   */\n  setStoppingState() {\n    if (this.state === Station.OFF || this.state === Station.STOPPING) {\n      this.state = Station.STOPPING;\n      this.setStatus('Stopping...');\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"queued to change app\" state\n   *\n   * @param appID {string}\n   * @return {boolean} The transition was successful\n   */\n  setQueuedToChangeAppState(appID) {\n    if (this.state === Station.ON && appID !== this.app) {\n      this.state = Station.SWITCHING_APP;\n      this.setStatus('Waiting to change app...');\n      this.switching_app = appID;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"changing app\" state\n   *\n   * @param appID {string}\n   * @return {boolean} The transition was successful\n   */\n  setChangingAppState(appID) {\n    if ((this.state === Station.ON || this.state === Station.SWITCHING_APP) && appID !== this.app) {\n      this.state = Station.SWITCHING_APP;\n      this.setStatus(`Opening ${appID}...`);\n      this.switching_app = appID;\n      return true;\n    }\n    return false;\n  }\n\n  setOnState() {\n    this.state = Station.ON;\n    this.setStatus('');\n    this.switching_app = '';\n  }\n\n  setOffState(reason = '') {\n    this.state = Station.OFF;\n    this.setStatus(reason, (reason !== ''));\n    this.switching_app = '';\n  }\n\n  /**\n   * Transitions the station to the \"error\" state\n   *\n   * @param reason {string} Description of the error\n   */\n  setErrorState(reason) {\n    this.state = Station.ERROR;\n    this.setStatus(reason);\n  }\n\n  /**\n   * Sets the station status text\n   *\n   * @private\n   * @param text {String} Status text\n   * @param withTimestamp {Boolean} Add a timestamp to the status\n   */\n  setStatus(text, withTimestamp = false) {\n    let timestamp = '';\n    if (withTimestamp) {\n      const now = new Date();\n      timestamp = `${now.getDate()}/${now.getMonth()} ${now.getHours()}:${now.getMinutes()}`;\n    }\n\n    this.status = [text, timestamp].join(' ');\n  }\n}\n\n// Station states\n\nStation.UNKNOWN = 'unk';\nStation.OFF = 'off';\nStation.ON = 'on';\nStation.STOPPING = 'stopping';\nStation.STARTING_STATION = 'starting_station';\nStation.STARTING_APP = 'starting_app';\nStation.SWITCHING_APP = 'switching_app';\nStation.ERROR = 'error';\n"],"sourceRoot":"/source/"}