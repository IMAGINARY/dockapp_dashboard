{"version":3,"sources":["lib/station.js"],"names":["Station","id","config","name","description","profile","type","default_app","client_settings","hilbert_station_default_application","compatible_apps","compatible_applications","state","UNKNOWN","status","app","switching_app","outputBuffer","stationStatus","changes","app_id","ERROR","HostState","UNREACHABLE","setErrorState","DOWN","setOffState","UP","setOnState","ON","currentTime","OFF","STOPPING","STARTING_STATION","setStartingAppState","STARTING_APP","app_state","ServiceState","OK","SWITCHING_APP","appID","reason","now","Date","getDate","getMonth","getHours","getMinutes"],"mappings":"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","file":"lib/station.js","sourcesContent":["import TerminalOutputBuffer from './terminal-output-buffer';\nimport Nagios from './nagios';\n\nexport default class Station {\n\n  constructor(id, config) {\n    this.id = id;\n    this.name = config.name || id;\n    this.description = config.description || '';\n    this.profile = config.profile || '';\n    this.type = config.type || '';\n    this.default_app = (config.client_settings && config.client_settings.hilbert_station_default_application) || '';\n    this.compatible_apps = config.compatible_applications;\n\n    this.state = Station.UNKNOWN;\n    this.status = '';\n    this.app = '';\n    this.switching_app = '';\n    this.outputBuffer = new TerminalOutputBuffer();\n  }\n\n  toJSON() {\n    return {\n      id: this.id,\n      name: this.name,\n      description: this.description,\n      profile: this.profile,\n      type: this.type,\n      state: this.state,\n      app: this.app,\n      status: this.status,\n      default_app: this.default_app,\n      compatible_apps: this.compatible_apps,\n      switching_app: this.switching_app,\n    };\n  }\n\n  /**\n   * Updates the state of the station\n   *\n   * Returns true if the state was changed\n   *\n   * @param {Object} stationStatus - MKLivestatus status of the station\n   * @returns {boolean}\n   */\n  updateFromMKLivestatus(stationStatus) {\n    // stationStatus:\n      // id: station.id,\n      // state: Nagios.HostState.DOWN,\n      // state_type: Nagios.StateType.HARD,\n      // app_state: Nagios.ServiceState.UNKNOWN,\n      // app_state_type: Nagios.StateType.HARD,\n      // app_id: '',\n\n    let changes = false;\n    if (this.app !== stationStatus.app_id) {\n      this.app = stationStatus.app_id;\n      changes = true;\n    }\n\n    // todo: STARTING_STATION, STARTING_APP and STOPPING timeout\n    // todo: SWITCHING_APP timeout\n\n    if (this.state === Station.ERROR) {\n      return false;\n    }\n\n    if (stationStatus.state === Nagios.HostState.UNREACHABLE) {\n      this.setErrorState('Station unreachable');\n      return true;\n    }\n\n    if (this.state === Station.UNKNOWN) {\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setOffState();\n        return true;\n      } else if (stationStatus.state === Nagios.HostState.UP) {\n        this.setOnState();\n        return true;\n      }\n    } else if (this.state === Station.ON) {\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setOffState(`Unexpectedly shut down (${this.currentTime()})`);\n        return true;\n      }\n    } else if (this.state === Station.OFF) {\n      if (stationStatus.state === Nagios.HostState.UP) {\n        this.setOnState();\n        return true;\n      }\n    } else if (this.state === Station.STOPPING) {\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setOffState(`Manually turned off (${this.currentTime()})`);\n        return true;\n      }\n    } else if (this.state === Station.STARTING_STATION) {\n      if (stationStatus.state === Nagios.HostState.UP) {\n        this.setStartingAppState();\n        return true;\n      }\n    } else if (this.state === Station.STARTING_APP) {\n      if (stationStatus.app_state === Nagios.ServiceState.OK) {\n        this.setOnState();\n        return true;\n      }\n    } else if (this.state === Station.SWITCHING_APP) {\n      if (this.switching_app !== '' && this.switching_app === stationStatus.app_id) {\n        this.setOnState();\n        return true;\n      }\n\n      if (stationStatus.state === Nagios.HostState.DOWN) {\n        this.setOffState(`Unexpectedly shut down (${this.currentTime()})`);\n        return true;\n      }\n    }\n\n    return changes;\n  }\n\n  /**\n   * Transitions the station to the \"waiting to start\" state\n   *\n   * @return {boolean} The transition was successful\n   */\n  setQueuedToStartState() {\n    if (this.state === Station.OFF) {\n      this.state = Station.STARTING_STATION;\n      this.status = 'Waiting to start...';\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"starting\" state\n   *\n   * @return {boolean} The transition was successful\n   */\n  setStartingState() {\n    if (this.state === Station.OFF || this.state === Station.STARTING_STATION) {\n      this.state = Station.STARTING_STATION;\n      this.status = 'Starting...';\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"starting app\" state\n   *\n   * @return {boolean} The transition was sucessful\n   */\n  setStartingAppState() {\n    if (this.state === Station.STARTING_STATION) {\n      this.state = Station.STARTING_APP;\n      this.status = 'Waiting for app...';\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"waiting to stop\" state\n   *\n   * @return {boolean} The transition was succesful\n   */\n  setQueuedToStopState() {\n    if (this.state === Station.ON) {\n      this.state = Station.STOPPING;\n      this.status = 'Waiting to stop...';\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"stopping\" state\n   *\n   * @return {boolean} The transition was successful\n   */\n  setStoppingState() {\n    if (this.state === Station.OFF || this.state === Station.STOPPING) {\n      this.state = Station.STOPPING;\n      this.status = 'Stopping...';\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"queued to change app\" state\n   *\n   * @param appID {string}\n   * @return {boolean} The transition was successful\n   */\n  setQueuedToChangeAppState(appID) {\n    if (this.state === Station.ON && appID !== this.app) {\n      this.state = Station.SWITCHING_APP;\n      this.status = 'Waiting to change app...';\n      this.switching_app = appID;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Transitions the station to the \"changing app\" state\n   *\n   * @param appID {string}\n   * @return {boolean} The transition was successful\n   */\n  setChangingAppState(appID) {\n    if ((this.state === Station.ON || this.state === Station.SWITCHING_APP) && appID !== this.app) {\n      this.state = Station.SWITCHING_APP;\n      this.status = `Opening ${appID}...`;\n      this.switching_app = appID;\n      return true;\n    }\n    return false;\n  }\n\n  setOnState() {\n    this.state = Station.ON;\n    this.status = '';\n    this.switching_app = '';\n  }\n\n  setOffState(reason) {\n    this.state = Station.OFF;\n    this.status = reason;\n    this.switching_app = '';\n  }\n\n  /**\n   * Transitions the station to the \"error\" state\n   *\n   * @param reason {string} Description of the error\n   */\n  setErrorState(reason) {\n    this.state = Station.ERROR;\n    this.status = reason;\n  }\n\n  /**\n   * Prints the current time\n   * @private\n   */\n  currentTime() {\n    const now = new Date();\n    return `${now.getDate()}/${now.getMonth()} ${now.getHours()}:${now.getMinutes()}`;\n  }\n}\n\n// Station states\n\nStation.UNKNOWN = 'unk';\nStation.OFF = 'off';\nStation.ON = 'on';\nStation.STOPPING = 'stopping';\nStation.STARTING_STATION = 'starting_station';\nStation.STARTING_APP = 'starting_app';\nStation.SWITCHING_APP = 'switching_app';\nStation.ERROR = 'error';\n"],"sourceRoot":"/source/"}