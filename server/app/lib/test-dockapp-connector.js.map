{"version":3,"sources":["lib/test-dockapp-connector.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;IAKqB,oB;;;;;;;;;;;;AAWnB,gCAAY,WAAZ,EAAyB,KAAzB,EAAgC,MAAhC,EAAwC;AAAA;;AACtC,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,WAAL,GAAmB,WAAnB;AACD;;;;;;;;;;;;uCAQkB;AACjB,aAAO,KAAK,WAAL,CAAiB,gBAAjB,EAAP;AACD;;;;;;;;;;;;iCASY,S,EAAW,M,EAAQ;AAC9B,aAAO,KAAK,WAAL,CAAiB,YAAjB,CAA8B,SAA9B,EAAyC,MAAzC,CAAP;AACD;;;;;;;;;;;;gCASW,S,EAAW,M,EAAQ;AAC7B,aAAO,KAAK,WAAL,CAAiB,WAAjB,CAA6B,SAA7B,EAAwC,MAAxC,CAAP;AACD;;;;;;;;;;;;;8BAUS,S,EAAW,K,EAAO,M,EAAQ;AAClC,aAAO,KAAK,WAAL,CAAiB,SAAjB,CAA2B,SAA3B,EAAsC,KAAtC,EAA6C,MAA7C,CAAP;AACD;;;;;;kBA3DkB,oB","file":"lib/test-dockapp-connector.js","sourcesContent":["/**\n * Testing stub for DockAppConnector\n *\n * Simulates the dockapp commands with a random delay\n */\nexport default class TestDockAppConnector {\n\n  /**\n   * Returns the state of the stations\n   * Returns an array of objects with shape\n   * {name: 'station name ', state: 0, state_type: 1,\n   * app_state: 0, app_state_type: 1, app_name: 'fg app name'}\n   *\n   * @returns {Promise}\n   * @resolve {Array}\n   */\n  constructor(testBackend, nconf, logger) {\n    this.nconf = nconf;\n    this.logger = logger;\n    this.testBackend = testBackend;\n  }\n\n  /**\n   * Reads the station config\n   * @returns {Promise}\n   * @resolve {Array} - List of stations\n   * @reject {Error}\n   */\n  getStationConfig() {\n    return this.testBackend.getStationConfig();\n  }\n\n  /**\n   * Starts a station\n   *\n   * @param {string} stationID - ID of the station\n   * @param {stream} output - Command output should be written here\n   * @returns {Promise}\n   */\n  startStation(stationID, output) {\n    return this.testBackend.startStation(stationID, output);\n  }\n\n  /**\n   * Stops a station\n   *\n   * @param {string} stationID - ID of the station\n   * @param {stream} output - Command output should be written here\n   * @returns {Promise}\n   */\n  stopStation(stationID, output) {\n    return this.testBackend.stopStation(stationID, output);\n  }\n\n  /**\n   * Change the foreground application running in a station\n   *\n   * @param {string} stationID - ID of the station\n   * @param {string} appID - ID of the app to set\n   * @param {stream} output - Command output should be written here\n   * @returns {Promise}\n   */\n  changeApp(stationID, appID, output) {\n    return this.testBackend.changeApp(stationID, appID, output);\n  }\n\n}\n"],"sourceRoot":"/source/"}