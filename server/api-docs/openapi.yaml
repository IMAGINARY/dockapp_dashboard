swagger: "2.0"
info:
  description: "HTTP API for the Hilbert UI server."
  version: "1.0.0"
  title: "Hilbert UI"
  contact:
    email: "eric.londaits@imaginary.org"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/api"
schemes:
- "http"
consumes:
  - application/json
produces:
  - application/json
paths:
  /applications:
    get:
      tags:
        - "Applications"
      summary: "List all applications"
      responses:
        200:
          description: Returns the list of applications.
          schema:
            type: object
            properties:
              applications:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Application ID
                    name:
                      type: string
                      description: Application Name
                    description:
                      type: string
                      description: Application Description
  /station_profiles:
    get:
      tags:
        - "Station profiles"
      summary: "List all profiles"
      responses:
        200:
          description: Returns the list of station profiles
          schema:
            type: object
            properties:
              applications:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Profile ID
                    name:
                      type: string
                      description: Profile Name
                    description:
                      type: string
                      description: Profile Description
  /stations:
    get:
      tags:
        - "Stations"
      summary: "Get the list of stations and the latest notifications."
      parameters:
        - in: query
          name: lastUpdateID
          type: integer
          description: "The last updateID received from calling this method. The server will only respond if or
            when the state of the stations changes (relative to the updateID). If this parameter is not sent the
            current state will be returned immediately. In case of a timeout before any updates an empty object
            will be returned"
      responses:
        200:
          description: Returns the list of stations with their current state.
          schema:
            type: object
            properties:
              updateID:
                type: number
                description: "A logical clock / incrementing id that can be sent back to the server to indicate
                  the last system state seen as part of the 'long poll' mechanism."
              stations:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Station ID
                    name:
                      type: string
                      description: Station Name
                    description:
                      type: string
                      description: Station description
                    profile:
                      type: string
                      description: ID of the station profile the station belongs to
                    type:
                      type: string
                      description: Station type
                    state:
                      type: string
                      description: Current state of the station
                      enum: [unk, on, off, stopping, starting_station, starting_app, switching_app, error]
                    status:
                      type: string
                      description: "The station's status message which gives extra human readable
                        details about the state"
                    locked:
                      type: boolean
                      description: "True if the station is temporarily locked"
                    locked_seconds:
                      type: number
                      description: "Number of seconds of lock remaining"
                    app:
                      type: string
                      description: ID of the app currently running in the station
                    default_app:
                      type: string
                      description: ID of the station's default app
                    compatible_apps:
                      type: array
                      description: IDs of the apps compatible with this station
                      items:
                        type: string
                    switching_app:
                      type: string
                      description: "ID of the app the station is currently switching to. An empty string
                        if the station is not currently changing apps."
                    icon:
                      type: string
                      description: URI of the icon of the currently running app.
              notifications:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                      description: Notification ID
                    time:
                      type: string
                      description: Timestamp in ISO format (yyyy-mm-ddThh:mm:ss.mmmZ)
                    type:
                      type: string
                      description: Notification type
                      enum: [info, warning, error]
                    message:
                      type: string
                      description: The notification text
                    station_id:
                      type: string
                      description: ID of the station that generated the notification
                    station_name:
                      type: string
                      description: Name of the station that generated the notification
  /stations/start:
    post:
      tags:
        - "Stations"
      summary: "Start a list of stations"
      consumes:
        - application/json
      parameters:
        - in: body
          name: arguments
          description: List of Station IDs
          schema:
            type: object
            properties:
              ids:
                description: List of station IDs
                type: array
                items:
                  type: string
      responses:
        200:
          description: Success
        400:
          description: Missing 'ids' argument
  /stations/stop:
    post:
      tags:
        - "Stations"
      summary: "Stop a list of stations"
      consumes:
        - application/json
      parameters:
        - in: body
          name: arguments
          description: List of Station IDs
          schema:
            type: object
            properties:
              ids:
                description: List of station IDs
                type: array
                items:
                  type: string
      responses:
        200:
          description: Success
        400:
          description: Missing 'ids' argument
  /stations/change_app:
    post:
      tags:
        - "Stations"
      summary: "Change the application in a list of stations"
      consumes:
        - application/json
      parameters:
        - in: body
          name: arguments
          schema:
            type: object
            properties:
              ids:
                description: List of station IDs
                type: array
                items:
                  type: string
              app:
                description: App ID
                type: string
      responses:
        200:
          description: Success
        400:
          description: Missing argument
  /station/{id}/output:
    get:
      tags:
        - "Stations"
      summary: "Retrieve the station terminal output"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: ID of a station
      responses:
        200:
          description: Returns the terminal output
          schema:
            type: object
            properties:
              lines:
                type: array
                description: List of terminal output lines
                items:
                  type: string
  /server/output:
    get:
      tags:
        - "Server"
      summary: "Retrieve the global terminal output"
      responses:
        200:
          description: Returns the global terminal output
          schema:
            type: object
            properties:
              lines:
                type: array
                description: List of terminal output lines
                items:
                  type: string
  /server/mklivestatus:
    get:
      tags:
        - "Server"
      summary: "Retrieve the last state fetched from the MK Livestatus service (for debugging)"
      responses:
        200:
          description: Returns the last MK Livestatus state
          schema:
            type: object
            properties:
              lastState:
                type: array
                items:
                  type: object
                  description: State of each station
                  properties:
                    id:
                      type: string
                      description: Station ID
                    state:
                      type: number
                      description: Station state (see nagios.js)
                    state_type:
                      type: number
                      description: Station state type (see nagios.js)
                    app_state:
                      type: number
                      description: App state (see nagios.js)
                    app_state_type:
                      type: number
                      description: App state (see nagios.js)
                    app_id:
                      type: string
                      description: ID of the currently running app
  /notifications:
    get:
      tags:
        - "Notifications"
      summary: "List all notifications"
      responses:
        200:
          description: Returns the latest notifications
          schema:
            type: object
            properties:
              notifications:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                      description: Notification ID
                    time:
                      type: string
                      description: Timestamp in ISO format (yyyy-mm-ddThh:mm:ss.mmmZ)
                    type:
                      type: string
                      description: Notification type
                      enum: [info, warning, error]
                    message:
                      type: string
                      description: The notification text
                    station_id:
                      type: string
                      description: ID of the station that generated the notification
                    station_name:
                      type: string
                      description: Name of the station that generated the notification
  /presets:
    get:
      tags:
        - "Presets"
      summary: "List all presets"
      responses:
        200:
          description: Returns the list of presets.
          schema:
            type: object
            properties:
              presets:
                type: array
                items:
                  $ref: "#/definitions/PresetResponse"

        500:
          description: Unspecified error.
  /preset:
    post:
      tags:
        - "Presets"
      summary: "Create a preset"
      parameters:
        - in: body
          name: preset
          description: The property data for the new preset to create
          schema:
            $ref: "#/definitions/PresetRequest"
      responses:
        200:
          description: Returns the newly created Preset, including the ID
          schema:
            $ref: "#/definitions/PresetResponse"
        400:
          description: A preset with the specified name already exists.
          schema:
            type: object
            properties:
              error:
                type: string
        500:
          description: Unspecified error.
  /preset/{id}:
    parameters:
      - in: path
        name: id
        type: integer
        required: true
        description: ID of a preset
    get:
      tags:
        - "Presets"
      responses:
        200:
          description: Returns the requested preset. stationApps contains a map of station IDs to app IDs.
          schema:
            $ref: "#/definitions/PresetResponse"
        404:
          description: A preset with the specified ID does not exist.
        500:
          description: Unspecified error.
      summary: "Retrieve a preset"
    put:
      tags:
        - "Presets"
      summary: "Update a preset"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: ID of the preset to get
        - in: body
          name: preset
          description: The property values you want to update.
          schema:
            $ref: "#/definitions/PresetRequest"
      responses:
        200:
          description: Returns the updated preset.
          schema:
            $ref: "#/definitions/PresetResponse"
        400:
          description: A preset with the specified name already exists.
          schema:
            type: object
            properties:
              error:
                type: string
        404:
          description: A preset with the specified ID does not exist.
        500:
          description: Unspecified error.
    delete:
      tags:
        - "Presets"
      summary: "Delete a preset"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: ID of the preset to get
      responses:
        200:
          description: The preset was deleted succesfully.
        404:
          description: A preset with the specified ID does not exist.
        500:
          description: Unspecified error.
  /preset/{id}/activate:
    post:
      tags:
        - "Presets"
      summary: "Activate a preset"
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: ID of the preset to activate
      responses:
        200:
          description: The preset was activated succesfully.
        404:
          description: A preset with the specified ID does not exist.
        500:
          description: Unspecified error.
  /test-backend/flags:
    get:
      tags:
        - "Test backend"
      summary: "Get the test backend flags"
      responses:
        200:
          description: Returns the values of the flags
          schema:
            type: object
            properties:
              testMode:
                type: boolean
              flags:
                $ref: "#/definitions/TestBackendFlags"

    post:
      tags:
        - "Test backend"
      summary: "Set the test backend flags"
      parameters:
        - in: body
          name: flags
          description: The flag values you want to set
          schema:
            $ref: "#/definitions/TestBackendFlags"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/TestBackendFlags"
  /test-backend/stations/unreachable:
    post:
      tags:
        - "Test backend"
      summary: Simulate stations becoming unreachable
      parameters:
        - in: body
          name: arguments
          description: List of Station IDs
          schema:
            type: object
            properties:
              ids:
                description: List of station IDs
                type: array
                items:
                  type: string
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              ids:
                description: List of station IDs
                type: array
                items:
                  type: string
        400:
          description: Missing 'ids' argument
  /test-backend/stations/reachable:
    post:
      tags:
        - "Test backend"
      summary: Simulate stations becoming reachable
      parameters:
        - in: body
          name: arguments
          description: List of Station IDs
          schema:
            type: object
            properties:
              ids:
                description: List of station IDs
                type: array
                items:
                  type: string
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              ids:
                description: List of station IDs
                type: array
                items:
                  type: string
        400:
          description: Missing 'ids' argument
  /test-backend/stations/stop-unexpectedly:
    post:
      tags:
        - "Test backend"
      summary: Simulate stations stopping unexpectedly
      parameters:
        - in: body
          name: arguments
          description: List of Station IDs
          schema:
            type: object
            properties:
              ids:
                description: List of station IDs
                type: array
                items:
                  type: string
      responses:
        200:
          description: Success
        400:
          description: Missing 'ids' argument
definitions:
  PresetResponse:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      stationApps:
        type: object
        properties:
          stationID1:
            type: string
          stationID2:
            type: string
          stationID3:
            type: string
  PresetRequest:
    type: object
    properties:
      name:
        type: string
      stationApps:
        type: object
        properties:
          stationID1:
            type: string
          stationID2:
            type: string
          stationID3:
            type: string
  TestBackendFlags:
    type: object
    properties:
      sim-fail-cli:
        type: boolean
        default: false
      sim-unreachable:
        type: boolean
        default: false
      sim-timeout:
        type: boolean
        default: false